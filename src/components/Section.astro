---
interface Props {
    id: string;
    navId: string;
    heading?: string;
    subheading?: string;
}

const { id, navId, heading, subheading } = Astro.props;
---

<section id={id} data-nav-id={navId} class={`with-background py-22 lg:py-28`}>
    {
        (heading || subheading) && (
            <header class="section-header stack gap-2 lg:gap-4">
                {heading && <h3>{heading}</h3>}
                {subheading && <p>{subheading}</p>}
            </header>
        )
    }
    <slot />
</section>

<style>
    section {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        gap: 3rem;
    }

    @media (min-width: 48rem) {
        section {
            gap: 5rem;
        }
    }

    .with-background {
        position: relative;
    }

    .with-background::before {
        --hero-bg: var(--bg-image-subtle-2);

        content: "";
        position: absolute;
        pointer-events: none;
        left: 50%;
        width: 100vw;
        aspect-ratio: calc(2.25 / var(--bg-scale));
        top: 0;
        transform: translateY(-75%) translateX(-50%);
        background:
            url("/assets/backgrounds/noise.png") top center/220px repeat,
            var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
            var(--gray-999);
        background-blend-mode: overlay, normal, normal, normal;
        mix-blend-mode: var(--bg-blend-mode);
        z-index: -1;
    }

    .section-header {
        justify-self: center;
        text-align: center;
        max-width: 50ch;
        font-size: var(--text-md);
        color: var(--gray-300);
    }

    .section-header h3 {
        font-size: var(--text-2xl);
    }

    @media (min-width: 48rem) {
        .section-header {
            font-size: var(--text-lg);
        }

        .section-header h3 {
            font-size: var(--text-4xl);
        }
    }
</style>
